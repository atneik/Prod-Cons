/*
** Aniket Handa
** GNU GPL v3
** Ref: W. Richard Stevens' UNIX Network Programming 2nd edition.
*/

Read me for Prod-Cons
=============================

Contents
=============================
	1.	About
	2.	Build & Run
		2.1	*nix
		2.2	Windows VS
		2.3	Xcode
	3.	Usage
	4.	DOC

1.	About
=============================
A simple command line solution for the Producer Consumer problem using System V IPC.

2.	Build & Run
=============================
	
2.1	*nix
-----------------------------

	What will be needed:

	1)	GCC
	3)	Cmake (optional)

Open the root dir of the code in the Terminal. Then,

	$ mkdir build
	$ cd build
	$ cmake ..
	$ make

If no errors you will see some executables in /build/src/
If you don't have Cmake, you can simply build the solution on *nix systems by:
	cd to the root of the src
	$make

2.2	Windows
-----------------------------

	What will be needed:

	1)	Visual Studio
	3)	Cmake

Open the root dir of the code in the Command prompt. Then,

	$ mkdir build
	$ cd build
	$ cmake -g "Visual Studio" ..

If no errors you will see Visual Studio's solution (.snl) in the default dir.

2.3	Mac OS Xcode
-----------------------------

	What will be needed:

	1)	Apple Developer Tools
	2)	Xcode
	3)	Cmake

Open the root dir of the code in the Terminal. Then,

	$ mkdir build
	$ cd build
	$ cmake -g "Xcode" ..

If no errors you will see Xcode's solution in the default dir.

3	Usage 
=============================

3.1	Producer
-----------------------------
	./Producer [String] [delay]

	String: array of characters to be produced.
	delay:	delay in seconds.

3.2	Consumer
-----------------------------
	./Consumer [delay]

	delay:	delay in seconds.

4	DOC
=============================

Don't forget to checkout the doc folder for dependency graph, structures, etc. Generated by Doxygen. Click on index.html

EOF